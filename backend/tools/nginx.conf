# nginx.conf

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include mime.types;
    # Configuration du serveur HTTP pour les redirections HTTPS
    server {
        listen 80;
        server_name transcendence.42.fr www.transcendence.42.fr;

        # Redirection permanente vers HTTPS
        return 301 https://$host$request_uri;
    }

    # Configuration du serveur HTTPS
    server {
        listen 8000 ssl;
        listen [::]:8000 ssl;
        http2 on;


        ssl_protocols TLSv1.2 TLSv1.3;
        # Chemin vers le certificat SSL et la clé privée
        ssl_certificate /etc/nginx/ssl/transcendance.crt;
        ssl_certificate_key /etc/nginx/ssl/transcendance.key;

        server_name transcendence.42.fr www.transcendence.42.fr;

        # Emplacement des fichiers statiques
        location /static/ {
            alias /var/www/static/;
        }

        # Emplacement des fichiers média
        location /media/ {
            alias /var/www/media/;
        }

        # Proxy vers le serveur web (Django)
        location / {
            proxy_pass http://transcendence:8000;  # Redirige les requêtes vers le service 'web' sur le port 8000
            proxy_set_header Host $host;  # Transmet l'en-tête 'Host' d'origine au backend
            proxy_set_header X-Real-IP $remote_addr;  # Transmet l'adresse IP réelle du client
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Transmet la chaîne d'adresses IP de proxy
            proxy_set_header X-Forwarded-Proto $scheme;  # Transmet le schéma (http ou https) utilisé par le client
            proxy_set_header X-Forwarded-Host $host:$server_port;  # Transmet l'hôte et le port d'origine
        }

        location /ws/ {
            proxy_pass http://transcendence:8000;  # Redirige les requêtes WebSocket vers le service 'web' sur le port 8000
            proxy_http_version 1.1;  # Utilise HTTP/1.1 pour prendre en charge les connexions WebSocket
            proxy_set_header Upgrade $http_upgrade;  # Permet la mise à niveau de la connexion HTTP vers WebSocket
            proxy_set_header Connection "upgrade";  # Maintient la connexion ouverte pour WebSocket
            proxy_set_header Host $host;  # Transmet l'en-tête 'Host' d'origine au backend
            proxy_set_header X-Real-IP $remote_addr;  # Transmet l'adresse IP réelle du client
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Transmet la chaîne d'adresses IP de proxy
            proxy_set_header X-Forwarded-Proto $scheme;  # Transmet le schéma (http ou https) utilisé par le client
        }
    }
}
